version: "3.8"

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - account_microservice
      - document_service
      - hospital_service
      - timetable_service
      - swagger_ui
      - db
    networks:
      - webnet
    restart: always

  account_microservice:
    build:
      context: ./account-microservice
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=yourpassword
      - DB_NAME=test
    expose:
      - "8080"
    depends_on:
      - db
    networks:
      - webnet
    restart: always

  document_service:
    build:
      context: ./document_service
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=yourpassword
      - DB_NAME=test
      - ACCOUNT_SERVICE_URL=http://account_microservice:8080
      - HOSPITAL_SERVICE_URL=http://hospital_service:8081
    expose:
      - "8083"
    depends_on:
      - db
    networks:
      - webnet
    restart: always

  hospital_service:
    build:
      context: ./hospital_service
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=yourpassword
      - DB_NAME=test
      - ACCOUNT_SERVICE_URL=http://account_microservice:8080
    expose:
      - "8081"
    depends_on:
      - db
    networks:
      - webnet
    restart: always

  timetable_service:
    build:
      context: ./timetable_service
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=yourpassword
      - DB_NAME=test
      - ACCOUNT_SERVICE_URL=http://account_microservice:8080
      - HOSPITAL_SERVICE_URL=http://hospital_service:8081
    expose:
      - "8082"
    depends_on:
      - db
    networks:
      - webnet
    restart: always

  swagger_ui:
    build:
      context: ./swagger-ui
      dockerfile: Dockerfile
    environment:
      - PORT=8084
    expose:
      - "8084"
    networks:
      - webnet
    restart: always

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - webnet
    restart: always

networks:
  webnet:
    driver: bridge

volumes:
  postgres_data:
